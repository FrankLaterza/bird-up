{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charl\\\\proj\\\\Bird Up\\\\bird-up\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Map from 'ol/Map.js';\nimport MapScreen from './components/MapScreen/MapScreen';\nimport DexScreen from './components/DexScreen/DexScreen';\nimport GalleryScreen from './components/GalleryScreen/GalleryScreen';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const MAP_SCREEN = 0;\n  const DEX_SCREEN = 1;\n  const GALLERY_SCREEN = 2;\n  const screens = [MapScreen, DexScreen, GalleryScreen];\n  const [currentScreen, setScreen] = useState(MAP_SCREEN);\n  const updateScreen = screen => {\n    setScreen(screen);\n  };\n  const CurrentScreen = screens[currentScreen]; // Select the current screen component\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CurrentScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"openDex\",\n      onClick: () => updateScreen(DEX_SCREEN),\n      children: \"Motherfucker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Dx6gGcaDnFLt3L92L3Ynv2iEFPc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","Map","MapScreen","DexScreen","GalleryScreen","jsxDEV","_jsxDEV","App","_s","MAP_SCREEN","DEX_SCREEN","GALLERY_SCREEN","screens","currentScreen","setScreen","updateScreen","screen","CurrentScreen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/charl/proj/Bird Up/bird-up/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Map from 'ol/Map.js';\n\nimport MapScreen from './components/MapScreen/MapScreen';\nimport DexScreen from './components/DexScreen/DexScreen';\nimport GalleryScreen from './components/GalleryScreen/GalleryScreen';\n\nimport './App.css';\n\nfunction App() {\n  const MAP_SCREEN = 0;\n  const DEX_SCREEN = 1;\n  const GALLERY_SCREEN = 2;\n  const screens = [MapScreen, DexScreen, GalleryScreen];\n  const [currentScreen, setScreen] = useState(MAP_SCREEN);\n\n  const updateScreen = (screen) => {\n    setScreen(screen);\n  }\n\n  const CurrentScreen = screens[currentScreen]; // Select the current screen component\n\n  return (\n    <div className=\"App\">\n      <CurrentScreen />\n      <button id=\"openDex\" onClick={() => updateScreen(DEX_SCREEN)}>Motherfucker</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,GAAG,MAAM,WAAW;AAE3B,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,aAAa,MAAM,0CAA0C;AAEpE,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,UAAU,GAAG,CAAC;EACpB,MAAMC,UAAU,GAAG,CAAC;EACpB,MAAMC,cAAc,GAAG,CAAC;EACxB,MAAMC,OAAO,GAAG,CAACV,SAAS,EAAEC,SAAS,EAAEC,aAAa,CAAC;EACrD,MAAM,CAACS,aAAa,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAACU,UAAU,CAAC;EAEvD,MAAMM,YAAY,GAAIC,MAAM,IAAK;IAC/BF,SAAS,CAACE,MAAM,CAAC;EACnB,CAAC;EAED,MAAMC,aAAa,GAAGL,OAAO,CAACC,aAAa,CAAC,CAAC,CAAC;;EAE9C,oBACEP,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA,CAACW,aAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjBjB,OAAA;MAAQkB,EAAE,EAAC,SAAS;MAACC,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACL,UAAU,CAAE;MAAAS,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChF,CAAC;AAEV;AAACf,EAAA,CAnBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}