{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charl\\\\proj\\\\Bird Up\\\\bird-up\\\\src\\\\components\\\\MapScreen\\\\MapScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport './MapScreen.css';\nimport \"ol/ol.css\";\nimport { useGeographic } from 'ol/proj.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseGeographic();\nfunction MapScreen() {\n  _s();\n  const mapRef = useRef();\n  useEffect(() => {\n    const osmLayer = new TileLayer({\n      preload: Infinity,\n      source: new OSM()\n    });\n    const map = new Map({\n      target: mapRef.current,\n      layers: [osmLayer],\n      view: new View({\n        center: [0, 0],\n        zoom: 0\n      })\n    });\n    return () => map.setTarget(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    ref: mapRef,\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(MapScreen, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = MapScreen;\nexport default MapScreen;\nvar _c;\n$RefreshReg$(_c, \"MapScreen\");","map":{"version":3,"names":["React","useEffect","useRef","Map","View","TileLayer","OSM","useGeographic","jsxDEV","_jsxDEV","MapScreen","_s","mapRef","osmLayer","preload","Infinity","source","map","target","current","layers","view","center","zoom","setTarget","id","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/charl/proj/Bird Up/bird-up/src/components/MapScreen/MapScreen.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport './MapScreen.css';\nimport \"ol/ol.css\";\nimport {useGeographic} from 'ol/proj.js';\n\n\nuseGeographic();\n\n\nfunction MapScreen() {\n  const mapRef = useRef()\n\n  useEffect(() => {\n    const osmLayer = new TileLayer({\n      preload: Infinity,\n      source: new OSM(),\n    })\n\n    const map = new Map({\n      target: mapRef.current,\n      layers: [osmLayer],\n      view: new View({\n        center: [0, 0],\n        zoom: 0,\n      }),\n    })\n    return () => map.setTarget(null)\n  }, [])\n\n  return (\n    <div\n      id=\"map\"\n      ref={mapRef}\n      className=\"map-container\"\n    />\n  )\n}\n\nexport default MapScreen"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,GAAG,EAAEC,IAAI,QAAQ,IAAI;AAC9B,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAOC,GAAG,MAAM,eAAe;AAC/B,OAAO,iBAAiB;AACxB,OAAO,WAAW;AAClB,SAAQC,aAAa,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzCF,aAAa,CAAC,CAAC;AAGf,SAASG,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,MAAM,GAAGV,MAAM,CAAC,CAAC;EAEvBD,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAG,IAAIR,SAAS,CAAC;MAC7BS,OAAO,EAAEC,QAAQ;MACjBC,MAAM,EAAE,IAAIV,GAAG,CAAC;IAClB,CAAC,CAAC;IAEF,MAAMW,GAAG,GAAG,IAAId,GAAG,CAAC;MAClBe,MAAM,EAAEN,MAAM,CAACO,OAAO;MACtBC,MAAM,EAAE,CAACP,QAAQ,CAAC;MAClBQ,IAAI,EAAE,IAAIjB,IAAI,CAAC;QACbkB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,IAAI,EAAE;MACR,CAAC;IACH,CAAC,CAAC;IACF,OAAO,MAAMN,GAAG,CAACO,SAAS,CAAC,IAAI,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IACEgB,EAAE,EAAC,KAAK;IACRC,GAAG,EAAEd,MAAO;IACZe,SAAS,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN;AAACpB,EAAA,CA3BQD,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA6BlB,eAAeA,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}